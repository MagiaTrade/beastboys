# Define the URL to download cacert.pem
set(CACERT_URL "https://curl.se/ca/cacert.pem")

# Define the output file name
set(OUTPUT_FILE "${CMAKE_CURRENT_SOURCE_DIR}/Common/cacert_data.h")

# Define the temporary file to store cacert.pem
set(TEMP_FILE "${CMAKE_CURRENT_BINARY_DIR}/cacert.pem")

# Download the latest cacert.pem
message(STATUS "Downloading cacert.pem from ${CACERT_URL}...")
file(DOWNLOAD ${CACERT_URL} ${TEMP_FILE} STATUS DOWNLOAD_STATUS LOG DOWNLOAD_LOG)

# Check if the download was successful
if(NOT DOWNLOAD_STATUS EQUAL 0)
  message(FATAL_ERROR "Error downloading cacert.pem: ${DOWNLOAD_LOG}")
else()
  message(STATUS "Download of cacert.pem completed successfully.")
endif()

# Start creating the header file with a warning message
message(STATUS "Starting to create the header file ${OUTPUT_FILE}...")
file(WRITE ${OUTPUT_FILE} "/*\n")
file(APPEND ${OUTPUT_FILE} " * This file was automatically generated by a CMake script.\n")
file(APPEND ${OUTPUT_FILE} " * DO NOT MODIFY THIS FILE MANUALLY.\n")
file(APPEND ${OUTPUT_FILE} " */\n\n")

# Add include guards to the header file
file(APPEND ${OUTPUT_FILE} "#ifndef CACERT_DATA_H\n")
file(APPEND ${OUTPUT_FILE} "#define CACERT_DATA_H\n\n")
file(APPEND ${OUTPUT_FILE} "const char cacert_data[] = R\"(\n")

# Check if the temporary cacert.pem file was created
if(EXISTS ${TEMP_FILE})
  message(STATUS "Temporary file ${TEMP_FILE} created successfully. Reading content...")
else()
  message(FATAL_ERROR "Error: The temporary file ${TEMP_FILE} was not created.")
endif()

# Add the contents of cacert.pem to the header file
file(READ ${TEMP_FILE} CACERT_CONTENTS)
file(APPEND ${OUTPUT_FILE} "${CACERT_CONTENTS}")

# Check if the content was read correctly
if(NOT CACERT_CONTENTS)
  message(FATAL_ERROR "Error: The content of the file ${TEMP_FILE} is empty.")
else()
  message(STATUS "Content of cacert.pem read successfully.")
endif()

# Finalize the header file
file(APPEND ${OUTPUT_FILE} ")\";\n\n")
file(APPEND ${OUTPUT_FILE} "#endif // CACERT_DATA_H\n")

# Remove the temporary cacert.pem file
message(STATUS "Removing temporary file ${TEMP_FILE}...")
file(REMOVE ${TEMP_FILE})

message(STATUS "File ${OUTPUT_FILE} generated successfully.")
